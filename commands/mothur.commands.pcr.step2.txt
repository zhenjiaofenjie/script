#make.contigs(file=mock.txt,insert=25,processors=12)
#screen.seqs(fasta=mock.trim.contigs.fasta,contigsreport=mock.contigs.report,maxambig=0,minlength=400,maxn=0,minoverlap=50,processors=12,group=mock.contigs.groups)
#unique.seqs(fasta=mock.trim.contigs.good.pcr.fasta)
#count.seqs(name=mock.trim.contigs.good.pcr.names,group=mock.contigs.good.pcr.groups)
#align.seqs(fasta=mock.trim.contigs.good.pcr.unique.fasta,reference=~/silva.bacteria/silva.bacteria.fasta,processors=12)
#summary.seqs(fasta=mock.trim.contigs.good.pcr.unique.align,count=mock.trim.contigs.good.pcr.count_table)
#choose the 2.5% end and the 97.5% start
set.current(processors=12)
screen.seqs(fasta=mock.trim.contigs.good.pcr.unique.align,count=mock.trim.contigs.good.pcr.count_table,summary=mock.trim.contigs.good.pcr.unique.summary,start=6430,end=23439,maxhomop=8,processors=12)
summary.seqs(fasta=mock.trim.contigs.good.pcr.unique.good.align,count=mock.trim.contigs.good.pcr.good.count_table)
filter.seqs(fasta=mock.trim.contigs.good.pcr.unique.good.align, vertical=T, trump=.)
unique.seqs(fasta=mock.trim.contigs.good.pcr.unique.good.filter.fasta,count=mock.trim.contigs.good.pcr.good.count_table)
pre.cluster(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.fasta,count=mock.trim.contigs.good.pcr.unique.good.filter.count_table, diffs=5)
chimera.uchime(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.fasta, count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.count_table, dereplicate=t)
remove.seqs(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.fasta, accnos=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.accnos)
classify.seqs(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.fasta,count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.count_table,reference=~/trainset9_032012.pds.fasta,taxonomy=~/trainset9_032012.pds.tax,cutoff=80)
remove.lineage(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.fasta, count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.count_table, taxonomy=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pds.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
cluster.split(fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.fasta, count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.pick.count_table, taxonomy=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, splitmethod=classify, taxlevel=4, cutoff=0.15)
make.shared(list=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.list, count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.pick.count_table, label=0.03)
classify.otu(list=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.list, count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.pick.count_table, taxonomy=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, label=0.03, cutoff=80)
system(cp mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.shared mock.an.shared)
system(cp mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.cons.taxonomy mock.an.cons.taxonomy)
make.biom(shared=mock.an.shared, constaxonomy=mock.an.cons.taxonomy)
get.oturep(list=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.list,count=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.uchime.pick.pick.count_table,label=0.03,fasta=mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.fasta,method=abundance)
system(sed '/^>/!s/-//g' mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.rep.fasta >mock.an.0.03.rep.sed.fasta)
system(cp mock.trim.contigs.good.pcr.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.rep.fasta mock.an.0.03.rep.fasta)
